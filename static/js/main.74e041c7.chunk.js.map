{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addOrRemoveGood","good","setState","prevState","includes","filter","goodToLeave","whatIsSelected","result","length","forEach","selectedGood","i","slice","this","className","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,gBAAkB,SAACC,GACjB,EAAKC,UAAU,SAACC,GAAD,MAA0E,CACvFJ,cACGI,EAAUJ,cAAcK,SAASH,GAC9BE,EAAUJ,cAAcM,QAAO,SAAAC,GAAW,OAAIA,IAAgBL,KADlE,sBAEQE,EAAUJ,eAFlB,CAEiCE,S,EAIvCM,eAAiB,WACf,IAAQR,EAAkB,EAAKD,MAAvBC,cACJS,EAAS,GAEb,OAA6B,IAAzBT,EAAcU,OACT,oBAGoB,IAAzBV,EAAcU,OACV,GAAN,OAAUV,EAAc,GAAxB,iBAGFA,EAAcW,SAAQ,SAACC,EAAcC,GAC/BA,IAAMb,EAAcU,OAAS,IAC/BD,GAAM,UAAOG,EAAP,UAIJ,GAAN,OAAUH,EAAOK,MAAM,GAAI,GAA3B,gBAAqCd,EAAcA,EAAcU,OAAS,GAA1E,mB,4CAGF,WAAU,IAAD,OACCV,EAAkBe,KAAKhB,MAAvBC,cAER,OACE,sBAAKgB,UAAU,MAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,oBAAd,SACGD,KAAKP,mBAER,wBACEQ,UAAU,cACVC,KAAK,SACLC,QAAS,WACP,EAAKf,SAAS,CAAEH,cAAe,MAJnC,kBAUF,oBAAIgB,UAAU,YAAd,SACGnB,EAAgBsB,KACf,SAAAjB,GAAI,OACF,mCACE,qBACEc,UACEhB,EAAcK,SAASH,GACnB,2BACA,iBAJR,UAQGA,EACD,wBACEc,UAAU,cACVC,KAAK,SACLC,QAAS,WACP,EAAKjB,gBAAgBC,IAJzB,SAOGF,EAAcK,SAASH,GAAQ,IAAM,QAVpC,sB,GAhEJkB,IAAMC,WAsFTvB,ICnGfwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.74e041c7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component<{}, { selectedGoods: string[] }> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  addOrRemoveGood = (good: string) => {\n    this.setState(((prevState: { selectedGoods: string[] }): { selectedGoods: string[] } => ({\n      selectedGoods:\n        (prevState.selectedGoods.includes(good))\n          ? prevState.selectedGoods.filter(goodToLeave => goodToLeave !== good)\n          : [...prevState.selectedGoods, good],\n    })));\n  };\n\n  whatIsSelected = () => {\n    const { selectedGoods } = this.state;\n    let result = '';\n\n    if (selectedGoods.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (selectedGoods.length === 1) {\n      return `${selectedGoods[0]} is selected`;\n    }\n\n    selectedGoods.forEach((selectedGood, i) => {\n      if (i !== selectedGoods.length - 1) {\n        result += `${selectedGood}, `;\n      }\n    });\n\n    return `${result.slice(0, -2)} and ${selectedGoods[selectedGoods.length - 1]} are selected`;\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__heading\">\n          <h1 className=\"App__heading-text\">\n            {this.whatIsSelected()}\n          </h1>\n          <button\n            className=\"App__button\"\n            type=\"button\"\n            onClick={() => {\n              this.setState({ selectedGoods: [] });\n            }}\n          >\n            X\n          </button>\n        </div>\n        <ul className=\"App__list\">\n          {goodsFromServer.map(\n            good => (\n              <>\n                <li\n                  className={\n                    selectedGoods.includes(good)\n                      ? 'App__list-item--selected'\n                      : 'App__list-item'\n                  }\n                  key=\"good\"\n                >\n                  {good}\n                  <button\n                    className=\"App__button\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.addOrRemoveGood(good);\n                    }}\n                  >\n                    {selectedGoods.includes(good) ? '-' : '+'}\n                  </button>\n                </li>\n              </>\n            ),\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}